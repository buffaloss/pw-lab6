{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/Desktop/uni-labs/pw-lab6/wander-whirl/src/ThemeContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// ThemeContext.js\n// import React, { createContext, useState, useContext } from 'react';\n\n// const ThemeContext = createContext();\n\n// export const ThemeProvider = ({ children }) => {\n//   const [theme, setTheme] = useState('light');\n//   const [backgroundColor, setBackgroundColor] = useState('#4793AF'); // Default light background color\n\n//   const toggleTheme = () => {\n//     setTheme((prevTheme) => (prevTheme === 'light' ? 'dark' : 'light'));\n//     setBackgroundColor((prevColor) => (prevColor === '#4793AF' ? '#222222' : '#4793AF')); // Change background color accordingly\n//   };\n\n//   return (\n//     <ThemeContext.Provider value={{ theme, toggleTheme, backgroundColor }}>\n//       {children}\n//     </ThemeContext.Provider>\n//   );\n// };\n\n// export const useTheme = () => useContext(ThemeContext);\n\nimport { createContext, useContext, useState, useLayoutEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeContext = /*#__PURE__*/createContext();\nconst ThemeProvider = ({\n  children\n}) => {\n  _s();\n  const initialTheme = () => localStorage.getItem(\"app_theme\") || \"light\"; // Initialize theme from localStorage or default to 'light'\n  const [theme, setTheme] = useState(initialTheme);\n  const toggleTheme = () => setTheme(theme => theme === \"light\" ? \"dark\" : \"light\");\n  useLayoutEffect(() => {\n    localStorage.setItem(\"app_theme\", theme); // Save theme to localStorage\n\n    if (theme === \"light\") {\n      document.documentElement.classList.remove(\"dark-mode\");\n      document.documentElement.classList.add(\"light-mode\");\n    } else {\n      document.documentElement.classList.remove(\"light-mode\");\n      document.documentElement.classList.add(\"dark-mode\");\n    }\n  }, [theme]);\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      theme,\n      toggleTheme\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(ThemeProvider, \"sQXzjaPXy/ZABMA8HQE/IsM42+I=\");\n_c = ThemeProvider;\nconst useTheme = () => {\n  _s2();\n  const context = useContext(ThemeContext);\n  if (context === undefined) {\n    throw new Error(\"useTheme must be used within a ThemeProvider\");\n  }\n  return context;\n};\n_s2(useTheme, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport { ThemeProvider, useTheme };\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["createContext","useContext","useState","useLayoutEffect","jsxDEV","_jsxDEV","ThemeContext","ThemeProvider","children","_s","initialTheme","localStorage","getItem","theme","setTheme","toggleTheme","setItem","document","documentElement","classList","remove","add","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useTheme","_s2","context","undefined","Error","$RefreshReg$"],"sources":["/home/ubuntu/Desktop/uni-labs/pw-lab6/wander-whirl/src/ThemeContext.js"],"sourcesContent":["// ThemeContext.js\n// import React, { createContext, useState, useContext } from 'react';\n\n// const ThemeContext = createContext();\n\n// export const ThemeProvider = ({ children }) => {\n//   const [theme, setTheme] = useState('light');\n//   const [backgroundColor, setBackgroundColor] = useState('#4793AF'); // Default light background color\n\n\n//   const toggleTheme = () => {\n//     setTheme((prevTheme) => (prevTheme === 'light' ? 'dark' : 'light'));\n//     setBackgroundColor((prevColor) => (prevColor === '#4793AF' ? '#222222' : '#4793AF')); // Change background color accordingly\n//   };\n\n//   return (\n//     <ThemeContext.Provider value={{ theme, toggleTheme, backgroundColor }}>\n//       {children}\n//     </ThemeContext.Provider>\n//   );\n// };\n\n// export const useTheme = () => useContext(ThemeContext);\n\nimport { createContext, useContext, useState, useLayoutEffect } from \"react\";\n\nconst ThemeContext = createContext();\n\nconst ThemeProvider = ({ children }) => {\n  const initialTheme = () => localStorage.getItem(\"app_theme\") || \"light\"; // Initialize theme from localStorage or default to 'light'\n  const [theme, setTheme] = useState(initialTheme);\n\n  const toggleTheme = () => setTheme((theme) => (theme === \"light\" ? \"dark\" : \"light\"));\n\n  useLayoutEffect(() => {\n    localStorage.setItem(\"app_theme\", theme); // Save theme to localStorage\n\n    if (theme === \"light\") {\n      document.documentElement.classList.remove(\"dark-mode\");\n      document.documentElement.classList.add(\"light-mode\");\n    } else {\n      document.documentElement.classList.remove(\"light-mode\");\n      document.documentElement.classList.add(\"dark-mode\");\n    }\n  }, [theme]);\n\n  return (\n    <ThemeContext.Provider value={{ theme, toggleTheme }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n\nconst useTheme = () => {\n  const context = useContext(ThemeContext);\n  if (context === undefined) {\n    throw new Error(\"useTheme must be used within a ThemeProvider\");\n  }\n  return context;\n};\n\nexport { ThemeProvider, useTheme };\n"],"mappings":";;;AAAA;AACA;;AAEA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,SAASA,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,eAAe,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7E,MAAMC,YAAY,gBAAGN,aAAa,CAAC,CAAC;AAEpC,MAAMO,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACtC,MAAMC,YAAY,GAAGA,CAAA,KAAMC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,IAAI,OAAO,CAAC,CAAC;EACzE,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAACQ,YAAY,CAAC;EAEhD,MAAMK,WAAW,GAAGA,CAAA,KAAMD,QAAQ,CAAED,KAAK,IAAMA,KAAK,KAAK,OAAO,GAAG,MAAM,GAAG,OAAQ,CAAC;EAErFV,eAAe,CAAC,MAAM;IACpBQ,YAAY,CAACK,OAAO,CAAC,WAAW,EAAEH,KAAK,CAAC,CAAC,CAAC;;IAE1C,IAAIA,KAAK,KAAK,OAAO,EAAE;MACrBI,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACC,MAAM,CAAC,WAAW,CAAC;MACtDH,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACE,GAAG,CAAC,YAAY,CAAC;IACtD,CAAC,MAAM;MACLJ,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACC,MAAM,CAAC,YAAY,CAAC;MACvDH,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACE,GAAG,CAAC,WAAW,CAAC;IACrD;EACF,CAAC,EAAE,CAACR,KAAK,CAAC,CAAC;EAEX,oBACER,OAAA,CAACC,YAAY,CAACgB,QAAQ;IAACC,KAAK,EAAE;MAAEV,KAAK;MAAEE;IAAY,CAAE;IAAAP,QAAA,EAClDA;EAAQ;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAAClB,EAAA,CAvBIF,aAAa;AAAAqB,EAAA,GAAbrB,aAAa;AAyBnB,MAAMsB,QAAQ,GAAGA,CAAA,KAAM;EAAAC,GAAA;EACrB,MAAMC,OAAO,GAAG9B,UAAU,CAACK,YAAY,CAAC;EACxC,IAAIyB,OAAO,KAAKC,SAAS,EAAE;IACzB,MAAM,IAAIC,KAAK,CAAC,8CAA8C,CAAC;EACjE;EACA,OAAOF,OAAO;AAChB,CAAC;AAACD,GAAA,CANID,QAAQ;AAQd,SAAStB,aAAa,EAAEsB,QAAQ;AAAG,IAAAD,EAAA;AAAAM,YAAA,CAAAN,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}